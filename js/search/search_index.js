var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ChangeEvent.html",[0,0.567,1,1.575]],["body/interfaces/ChangeEvent.html",[1,2.163,2,0.778,3,0.594,4,0.51,5,0.355,6,0.215,7,0.683,8,1.11,9,3.29,10,2.809,11,3.324,12,0.51,13,0.618,14,1.345,15,2.334,16,0.355,17,0.038,18,0.035,19,0.035]],["title/interfaces/Config.html",[0,0.567,20,1.401]],["body/interfaces/Config.html",[2,0.783,3,0.597,4,0.512,5,0.357,6,0.217,7,0.687,12,0.512,13,0.62,16,0.432,17,0.039,18,0.035,19,0.035,20,1.935,21,3.675,22,3.205,23,1.35]],["title/interfaces/Flex.html",[0,0.567,24,1.401]],["body/interfaces/Flex.html",[2,0.804,3,0.613,4,0.527,5,0.367,6,0.223,7,0.706,12,0.527,13,0.63,16,0.367,17,0.038,18,0.036,19,0.036,23,1.372,24,2.64]],["title/interfaces/Function.html",[0,0.567,15,1.401]],["body/interfaces/Function.html",[2,0.72,3,0.549,4,0.472,5,0.329,6,0.199,7,0.632,8,1.027,12,0.472,13,0.589,14,1.399,15,2.225,16,0.41,17,0.04,18,0.033,19,0.033,23,1.465,25,4.345,26,1.592,27,4.472,28,2.002,29,3.248]],["title/interfaces/KeyValue.html",[0,0.567,30,1.252]],["body/interfaces/KeyValue.html",[2,0.837,3,0.638,4,0.548,5,0.382,6,0.232,7,0.734,17,0.037,18,0.037,19,0.037,23,1.193,30,1.849,31,3.537,32,2.069]],["title/interfaces/Layout.html",[0,0.567,33,1.122]],["body/interfaces/Layout.html",[2,0.699,3,0.534,4,0.458,5,0.319,6,0.194,7,0.614,8,0.997,12,0.458,13,0.578,16,0.464,17,0.04,18,0.033,19,0.033,24,2.746,33,1.385,34,2.525,35,3.613,36,2.957,37,3.613,38,4.093,39,4.093,40,4.093,41,3.495]],["title/interfaces/Leaf.html",[0,0.567,42,1.575]],["body/interfaces/Leaf.html",[2,0.644,3,0.491,4,0.421,5,0.294,6,0.178,7,0.565,8,0.917,12,0.421,13,0.548,14,1.542,16,0.466,17,0.041,18,0.031,19,0.031,23,1.405,29,3.023,30,2.179,33,1.844,42,2.328,43,2.323,44,2.323,45,2.026,46,2.93,47,3.935,48,2.259,49,2.93]],["title/interfaces/Metadata.html",[0,0.567,48,1.252]],["body/interfaces/Metadata.html",[2,0.598,3,0.456,4,0.392,5,0.273,6,0.166,7,0.525,8,0.853,12,0.392,13,0.523,14,1.138,16,0.468,17,0.039,18,0.03,19,0.03,22,3.232,23,1.464,26,1.764,30,1.764,48,1.323,50,3.603,51,4.05,52,1.595,53,2.16,54,3.091,55,2.914,56,1.884,57,3.459,58,3.091,59,3.091,60,2.16,61,3.706,62,3.091,63,3.091,64,2.16]],["title/components/NDynamicRendererComponent.html",[52,1.006,65,1.575]],["body/components/NDynamicRendererComponent.html",[1,1.259,3,0.213,4,0.183,5,0.127,6,0.25,8,0.937,11,0.879,12,0.43,13,0.297,14,1.21,15,0.69,16,0.469,17,0.042,18,0.017,19,0.017,23,0.646,26,1.993,28,1.588,29,2.062,32,0.69,42,1.259,48,1.876,52,1.374,53,1.635,56,2.566,60,1.008,64,1.635,65,1.588,66,1.426,67,0.879,68,1.18,69,1.18,70,1.442,71,1.442,72,1.914,73,2.373,74,3.054,75,1.18,76,1.442,77,1.18,78,1.442,79,1.914,80,2.339,81,2.339,82,1.914,83,2.339,84,2.779,85,2.339,86,2.951,87,1.635,88,2.339,89,2.339,90,2.951,91,2.339,92,2.339,93,2.339,94,2.951,95,2.415,96,2.339,97,2.951,98,2.339,99,2.275,100,1.426,101,2.373,102,1.914,103,1.914,104,1.18,105,1.442,106,1.799,107,2.339,108,2.339,109,3.064,110,2.339,111,1.442,112,1.18,113,2.339,114,1.442,115,1.18,116,3.394,117,1.008,118,1.442,119,2.415,120,1.442,121,1.442,122,1.442,123,1.442,124,2.793,125,1.442,126,1.18,127,2.951,128,1.442,129,1.914,130,1.442,131,1.914,132,1.008,133,1.18,134,1.008,135,1.442,136,1.442,137,1.442,138,1.635,139,1.442,140,1.18,141,1.008,142,1.426,143,1.442,144,1.442,145,1.442,146,1.635,147,1.18,148,1.18,149,1.442,150,1.914,151,1.18,152,1.008,153,1.18,154,2.608,155,1.787,156,1.18,157,1.442,158,1.18,159,1.442,160,1.442,161,3.395,162,1.442,163,1.442,164,1.442,165,1.442]],["title/modules/NDynamicRendererModule.html",[166,1.784,167,1.575]],["body/modules/NDynamicRendererModule.html",[3,0.449,4,0.385,5,0.269,6,0.219,8,0.839,14,1.126,16,0.36,17,0.039,18,0.029,19,0.029,20,2.624,21,2.85,26,1.745,65,2.987,66,1.853,67,1.853,82,2.488,87,2.125,109,2.85,116,2.85,124,2.125,132,2.125,166,1.853,167,2.841,168,2.85,169,2.485,170,2.488,171,2.488,172,2.488,173,3.337,174,2.488,175,2.488,176,3.04,177,3.04,178,3.04,179,3.04,180,2.488,181,3.04,182,2.488,183,3.04,184,2.488,185,2.488,186,2.488,187,3.04,188,2.488,189,3.04,190,2.488,191,3.04,192,3.04,193,3.04]],["title/injectables/NDynamicRendererService.html",[106,1.784,194,1.784]],["body/injectables/NDynamicRendererService.html",[3,0.162,4,0.139,5,0.097,6,0.1,8,1.304,10,0.765,11,1.743,12,0.139,13,0.236,14,1.372,15,0.89,16,0.466,17,0.041,18,0.013,19,0.013,20,1.669,23,1.258,26,2.127,28,1.001,32,0.89,48,1.591,52,0.834,53,1.695,57,1.3,64,1.3,67,0.667,79,1.522,87,1.3,95,1.522,99,3.235,100,3.088,101,1.999,102,2.852,104,0.896,106,0.667,109,3.474,112,0.896,116,3.57,117,0.765,124,1.695,126,0.896,129,0.896,131,0.896,132,1.3,133,0.896,134,0.765,140,0.896,141,0.765,142,3.06,147,1.522,151,1.522,152,2.951,153,0.896,154,1.3,155,2.135,158,1.985,182,0.896,186,0.896,190,1.522,195,1.094,196,0.896,197,1.86,198,1.86,199,1.86,200,1.86,201,1.86,202,1.86,203,1.86,204,1.86,205,1.86,206,1.86,207,1.86,208,1.86,209,1.86,210,1.86,211,1.86,212,1.86,213,1.86,214,1.86,215,1.86,216,1.86,217,1.86,218,1.094,219,1.094,220,1.094,221,4.079,222,1.094,223,2.425,224,1.094,225,1.094,226,1.094,227,1.094,228,1.094,229,2.852,230,3.485,231,2.425,232,1.094,233,1.094,234,1.094,235,1.3,236,0.896,237,1.094,238,1.094,239,1.094,240,1.094,241,1.86,242,1.094,243,1.094,244,1.094,245,1.094,246,2.852,247,1.094,248,3.912,249,1.094,250,1.86,251,1.094,252,0.896,253,1.094,254,1.86,255,1.094,256,1.094,257,1.094,258,1.094,259,1.86,260,1.094,261,0.896,262,1.86,263,1.86,264,1.86,265,1.094,266,1.094,267,1.094,268,1.094,269,1.094,270,1.094,271,1.094,272,1.094,273,1.094,274,0.896,275,1.094,276,0.896,277,1.094,278,1.094,279,1.094,280,1.094,281,1.094,282,1.094,283,0.896,284,1.094,285,1.094,286,1.094,287,1.86,288,1.094,289,1.094]],["title/interfaces/Options.html",[0,0.567,55,1.575]],["body/interfaces/Options.html",[2,0.561,3,0.428,4,0.368,5,0.256,6,0.155,7,0.493,8,0.8,9,2.373,12,0.368,13,0.501,14,1.561,16,0.499,17,0.039,18,0.028,19,0.028,22,1.767,23,1.392,28,1.56,31,2.373,32,1.388,34,2.026,52,1.358,55,2.715,56,2.407,99,1.767,100,1.767,142,1.767,152,3.369,155,1.388,246,2.373,283,2.373,290,2.899,291,2.899,292,3.946,293,2.737,294,5.045,295,2.373,296,2.899,297,2.899,298,2.899,299,2.899,300,2.899,301,2.373,302,3.675]],["title/interfaces/OutputEvents.html",[0,0.567,293,1.784]],["body/interfaces/OutputEvents.html",[1,2.675,2,0.804,3,0.613,4,0.527,5,0.367,6,0.223,7,0.706,12,0.527,13,0.63,16,0.367,17,0.038,18,0.036,19,0.036,146,3.718,293,2.532]],["title/interfaces/Panels.html",[0,0.567,303,1.784]],["body/interfaces/Panels.html",[2,0.551,3,0.42,4,0.361,5,0.251,6,0.152,7,0.483,8,0.785,12,0.361,13,0.564,14,1.489,16,0.457,17,0.04,18,0.028,19,0.028,23,1.489,24,1.362,26,1.217,30,2.047,32,1.362,33,1.834,41,1.988,43,1.988,44,1.988,45,1.734,46,2.915,49,3.054,117,2.724,138,3.343,155,1.362,235,1.988,303,1.734,304,2.328,305,2.328,306,3.897,307,2.328,308,2.328,309,3.915,310,2.844,311,4.101,312,2.844,313,2.328,314,2.328,315,2.328,316,2.697]],["title/interfaces/Section.html",[0,0.567,150,1.401]],["body/interfaces/Section.html",[2,0.667,3,0.509,4,0.437,5,0.304,6,0.185,7,0.586,8,0.951,12,0.437,13,0.561,14,1.508,16,0.456,17,0.039,18,0.032,19,0.032,23,1.222,30,2.209,33,1.876,42,2.383,43,2.408,44,2.408,45,2.101,46,2.981,49,2.981,150,2.342,304,2.821,305,2.821,307,2.821,308,2.821,317,4.003]],["title/interfaces/Sections.html",[0,0.567,316,1.575]],["body/interfaces/Sections.html",[2,0.804,3,0.613,4,0.527,5,0.367,6,0.223,7,0.706,12,0.527,13,0.63,16,0.367,17,0.038,18,0.036,19,0.036,150,2.699,316,2.235]],["title/coverage.html",[318,2.777]],["body/coverage.html",[0,1.067,1,1.282,4,0.302,5,0.5,6,0.307,7,0.937,15,1.141,16,0.21,17,0.041,18,0.025,19,0.025,20,1.141,24,1.141,30,1.02,33,0.914,42,1.282,48,1.02,52,0.819,55,1.282,65,1.282,67,2.097,68,1.95,69,1.95,106,1.452,150,1.141,194,1.452,196,1.95,293,1.452,303,1.452,316,1.282,318,1.665,319,2.383,320,2.383,321,2.383,322,2.383,323,2.383,324,5.039,325,2.383,326,4.039,327,2.383,328,2.383,329,4.039,330,3.441,331,3.441,332,2.383,333,2.383,334,4.039,335,4.039,336,2.383,337,2.383,338,2.383,339,2.383,340,2.816,341,3.441,342,1.95,343,1.95,344,2.383,345,2.383,346,2.383]],["title/dependencies.html",[169,2.142,347,1.715]],["body/dependencies.html",[6,0.232,17,0.043,18,0.031,19,0.031,33,1.275,52,1.143,66,2.636,73,2.323,169,2.026,348,3.324,349,5.587,350,3.324,351,4.325,352,3.324,353,3.324,354,3.324,355,3.324,356,3.324,357,3.324,358,3.324,359,3.324,360,4.325,361,3.54,362,3.324,363,3.324,364,3.324,365,3.324,366,3.324,367,3.324,368,3.324,369,3.324,370,3.324,371,3.324,372,3.324,373,3.324,374,3.324]],["title/index.html",[12,0.311,375,2.454,376,2.454]],["body/index.html",[6,0.087,10,1.138,11,0.993,13,0.327,14,0.259,16,0.283,17,0.043,18,0.012,19,0.012,20,0.449,21,2.403,22,2.747,24,2.229,25,2.62,26,0.924,27,2.111,28,0.505,32,1.034,33,1.319,34,1.509,36,0.768,38,2.111,39,2.111,40,2.111,41,2.041,45,0.572,46,1.78,47,1.767,48,0.697,49,2.219,50,1.138,51,1.333,52,0.743,55,1.162,56,0.572,57,1.138,60,1.138,61,1.138,66,1.78,72,0.768,73,1.803,74,1.767,75,0.768,77,0.768,84,0.768,99,2.096,100,2.096,101,2.949,103,1.767,115,2.111,119,0.768,134,0.655,141,0.655,142,2.219,146,1.138,150,0.78,155,1.034,156,3.753,166,0.993,167,1.162,180,0.768,184,2.815,185,0.768,188,0.768,194,0.572,229,1.767,235,0.655,236,0.768,252,2.111,261,0.768,274,0.768,276,0.768,292,1.333,295,0.768,301,0.768,302,1.333,309,1.333,311,1.333,313,0.768,314,0.768,315,0.768,316,0.877,317,1.333,318,1.138,347,1.138,377,0.938,378,0.938,379,1.629,380,0.938,381,0.938,382,0.938,383,0.768,384,0.938,385,1.629,386,0.938,387,2.579,388,0.938,389,0.938,390,0.938,391,0.938,392,0.938,393,0.938,394,0.938,395,2.159,396,0.938,397,0.938,398,0.938,399,0.938,400,0.938,401,3.202,402,0.938,403,0.938,404,0.938,405,0.938,406,0.938,407,0.938,408,1.629,409,2.159,410,0.938,411,0.938,412,0.938,413,0.938,414,0.938,415,0.938,416,0.938,417,0.938,418,2.159,419,0.938,420,0.938,421,0.938,422,0.938,423,1.629,424,0.938,425,2.579,426,0.938,427,1.629,428,1.629,429,2.579,430,1.629,431,0.938,432,0.938,433,0.938,434,0.938,435,1.629,436,1.629,437,0.938,438,0.938,439,0.938,440,0.938,441,1.629,442,0.938,443,0.938,444,0.938,445,0.938,446,0.938,447,1.629,448,0.938,449,0.938,450,0.938,451,0.938,452,0.938,453,0.938,454,0.938,455,0.938,456,0.938,457,0.938,458,0.938,459,0.938,460,1.629,461,2.579,462,1.629,463,1.629,464,1.629,465,1.629,466,1.333,467,1.629,468,1.629,469,1.629,470,1.629,471,1.629,472,1.629,473,1.629,474,2.111,475,2.579,476,1.629,477,1.629,478,1.629,479,1.629,480,1.629,481,1.629,482,1.629,483,0.938,484,0.938,485,0.938,486,0.938,487,0.938,488,0.938,489,0.938,490,0.938,491,0.938,492,0.938,493,0.938,494,0.938,495,0.938,496,0.938,497,0.938,498,0.938,499,1.629,500,0.938,501,0.938,502,0.938,503,0.938]],["title/modules.html",[168,2.777]],["body/modules.html",[17,0.037,18,0.037,19,0.037,167,2.381,168,3.091,361,3.62,383,3.62,504,4.424,505,4.424]],["title/overview.html",[506,3.252]],["body/overview.html",[2,0.742,17,0.039,18,0.034,19,0.034,52,1.319,65,3.062,166,2.337,167,2.967,169,2.886,170,3.138,171,3.138,172,3.138,173,3.876,174,3.138,175,3.138,194,2.337,474,4.205,506,3.138,507,3.835]],["title/properties.html",[13,0.446,347,1.715]],["body/properties.html",[13,0.568,17,0.039,18,0.037,19,0.037,50,3.128,508,4.477]],["title/miscellaneous/typealiases.html",[509,1.495,510,3.514]],["body/miscellaneous/typealiases.html",[5,0.363,6,0.22,7,0.698,12,0.521,16,0.363,17,0.039,18,0.035,19,0.035,61,3.451,138,3.451,148,3.362,303,2.504,509,2.504,511,4.108,512,4.938,513,4.108,514,4.108]],["title/miscellaneous/variables.html",[509,1.495,515,2.876]],["body/miscellaneous/variables.html",[5,0.357,6,0.217,12,0.512,16,0.432,17,0.039,18,0.035,19,0.035,154,2.824,155,1.935,340,3.308,342,4.002,343,4.002,466,3.308,509,2.463,515,3.308,516,4.89,517,4.042,518,4.042,519,4.042]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/ChangeEvent.html":{},"interfaces/Config.html":{},"interfaces/Flex.html":{},"interfaces/Function.html":{},"interfaces/KeyValue.html":{},"interfaces/Layout.html":{},"interfaces/Leaf.html":{},"interfaces/Metadata.html":{},"components/NDynamicRendererComponent.html":{},"modules/NDynamicRendererModule.html":{},"injectables/NDynamicRendererService.html":{},"interfaces/Options.html":{},"interfaces/OutputEvents.html":{},"interfaces/Panels.html":{},"interfaces/Section.html":{},"interfaces/Sections.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":324,"title":{},"body":{"coverage.html":{}}}],["0.0.1.tgz",{"_index":366,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":374,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":474,"title":{},"body":{"index.html":{},"overview.html":{}}}],["1.0.4",{"_index":508,"title":{},"body":{"properties.html":{}}}],["1.1.19",{"_index":364,"title":{},"body":{"dependencies.html":{}}}],["1/2",{"_index":323,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":156,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"index.html":{}}}],["12.0.0",{"_index":356,"title":{},"body":{"dependencies.html":{}}}],["12.1.0",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["12.2.13",{"_index":351,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":507,"title":{},"body":{"overview.html":{}}}],["14",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["14.2.0",{"_index":469,"title":{},"body":{"index.html":{}}}],["16",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["16/23",{"_index":337,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":475,"title":{},"body":{"index.html":{}}}],["2.2.0",{"_index":372,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":476,"title":{},"body":{"index.html":{}}}],["33",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":338,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":322,"title":{},"body":{"coverage.html":{}}}],["6.6.0",{"_index":370,"title":{},"body":{"dependencies.html":{}}}],["69",{"_index":336,"title":{},"body":{"coverage.html":{}}}],["8.0.0",{"_index":368,"title":{},"body":{"dependencies.html":{}}}],["9/24",{"_index":339,"title":{},"body":{"coverage.html":{}}}],["_config",{"_index":219,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["above",{"_index":418,"title":{},"body":{"index.html":{}}}],["accepts",{"_index":385,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":217,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["accordingly",{"_index":492,"title":{},"body":{"index.html":{}}}],["actual",{"_index":276,"title":{},"body":{"injectables/NDynamicRendererService.html":{},"index.html":{}}}],["actual_component",{"_index":165,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["add",{"_index":401,"title":{},"body":{"index.html":{}}}],["ajv",{"_index":79,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{}}}],["aliases",{"_index":511,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular/animations",{"_index":348,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":353,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["angular/flex",{"_index":355,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":358,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":359,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":360,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":362,"title":{},"body":{"dependencies.html":{}}}],["anything",{"_index":496,"title":{},"body":{"index.html":{}}}],["app",{"_index":498,"title":{},"body":{"index.html":{}}}],["app.component.css",{"_index":500,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":501,"title":{},"body":{"index.html":{}}}],["appcomponents",{"_index":442,"title":{},"body":{"index.html":{}}}],["application",{"_index":226,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["applications",{"_index":412,"title":{},"body":{"index.html":{}}}],["args",{"_index":145,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["arguments",{"_index":27,"title":{},"body":{"interfaces/Function.html":{},"index.html":{}}}],["array",{"_index":10,"title":{},"body":{"interfaces/ChangeEvent.html":{},"injectables/NDynamicRendererService.html":{},"index.html":{}}}],["arrays",{"_index":257,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["async",{"_index":95,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{}}}],["await",{"_index":159,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["b",{"_index":254,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["based",{"_index":283,"title":{},"body":{"injectables/NDynamicRendererService.html":{},"interfaces/Options.html":{}}}],["beta.34",{"_index":357,"title":{},"body":{"dependencies.html":{}}}],["binding",{"_index":458,"title":{},"body":{"index.html":{}}}],["blur",{"_index":513,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["boolean",{"_index":117,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{},"interfaces/Panels.html":{}}}],["border",{"_index":463,"title":{},"body":{"index.html":{}}}],["browse",{"_index":505,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":361,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["button",{"_index":407,"title":{},"body":{"index.html":{}}}],["call",{"_index":449,"title":{},"body":{"index.html":{}}}],["callback",{"_index":229,"title":{},"body":{"injectables/NDynamicRendererService.html":{},"index.html":{}}}],["called",{"_index":228,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["callfunction",{"_index":200,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["callfunction(viewfunctions",{"_index":220,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["calls",{"_index":222,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["card",{"_index":308,"title":{},"body":{"interfaces/Panels.html":{},"interfaces/Section.html":{}}}],["case",{"_index":395,"title":{},"body":{"index.html":{}}}],["case.casedetails.primarylife.personaldetails.sex",{"_index":480,"title":{},"body":{"index.html":{}}}],["case.personaldetails.name",{"_index":291,"title":{},"body":{"interfaces/Options.html":{}}}],["change",{"_index":148,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"miscellaneous/typealiases.html":{}}}],["change_event",{"_index":146,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"interfaces/OutputEvents.html":{},"index.html":{}}}],["changeevent",{"_index":1,"title":{"interfaces/ChangeEvent.html":{}},"body":{"interfaces/ChangeEvent.html":{},"components/NDynamicRendererComponent.html":{},"interfaces/OutputEvents.html":{},"coverage.html":{}}}],["changes",{"_index":126,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{}}}],["checkboxcomponent",{"_index":427,"title":{},"body":{"index.html":{}}}],["checkon",{"_index":405,"title":{},"body":{"index.html":{}}}],["class",{"_index":46,"title":{},"body":{"interfaces/Leaf.html":{},"interfaces/Panels.html":{},"interfaces/Section.html":{},"index.html":{}}}],["class:\"panel_color",{"_index":465,"title":{},"body":{"index.html":{}}}],["classes",{"_index":487,"title":{},"body":{"index.html":{}}}],["classname",{"_index":416,"title":{},"body":{"index.html":{}}}],["click",{"_index":406,"title":{},"body":{"index.html":{}}}],["cluster_ndynamicrenderermodule",{"_index":170,"title":{},"body":{"modules/NDynamicRendererModule.html":{},"overview.html":{}}}],["cluster_ndynamicrenderermodule_declarations",{"_index":172,"title":{},"body":{"modules/NDynamicRendererModule.html":{},"overview.html":{}}}],["cluster_ndynamicrenderermodule_exports",{"_index":171,"title":{},"body":{"modules/NDynamicRendererModule.html":{},"overview.html":{}}}],["code",{"_index":446,"title":{},"body":{"index.html":{}}}],["color:'red",{"_index":467,"title":{},"body":{"index.html":{}}}],["common",{"_index":485,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":363,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":52,"title":{"components/NDynamicRendererComponent.html":{}},"body":{"interfaces/Metadata.html":{},"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{},"interfaces/Options.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["component's",{"_index":461,"title":{},"body":{"index.html":{}}}],["component_name",{"_index":51,"title":{},"body":{"interfaces/Metadata.html":{},"index.html":{}}}],["component_template",{"_index":162,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["componentcache",{"_index":197,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["componentname",{"_index":420,"title":{},"body":{"index.html":{}}}],["components",{"_index":66,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"modules/NDynamicRendererModule.html":{},"dependencies.html":{},"index.html":{}}}],["components/dynamic/input.component",{"_index":432,"title":{},"body":{"index.html":{}}}],["components/dynamic/input1.component",{"_index":434,"title":{},"body":{"index.html":{}}}],["componentvalidation",{"_index":88,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["componentvalidation(metadata",{"_index":111,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["compute",{"_index":273,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["condition",{"_index":58,"title":{},"body":{"interfaces/Metadata.html":{}}}],["config",{"_index":20,"title":{"interfaces/Config.html":{}},"body":{"interfaces/Config.html":{},"modules/NDynamicRendererModule.html":{},"injectables/NDynamicRendererService.html":{},"coverage.html":{},"index.html":{}}}],["configuration",{"_index":301,"title":{},"body":{"interfaces/Options.html":{},"index.html":{}}}],["configuration,'library",{"_index":419,"title":{},"body":{"index.html":{}}}],["configures",{"_index":183,"title":{},"body":{"modules/NDynamicRendererModule.html":{}}}],["console.log(config",{"_index":445,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":104,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{}}}],["constructor(_config",{"_index":218,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["constructor(ndynamicrendererservice",{"_index":105,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["constructor(private",{"_index":439,"title":{},"body":{"index.html":{}}}],["containerised",{"_index":307,"title":{},"body":{"interfaces/Panels.html":{},"interfaces/Section.html":{}}}],["contains",{"_index":132,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"modules/NDynamicRendererModule.html":{},"injectables/NDynamicRendererService.html":{}}}],["context",{"_index":342,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":318,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":141,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{},"index.html":{}}}],["created",{"_index":447,"title":{},"body":{"index.html":{}}}],["creates",{"_index":182,"title":{},"body":{"modules/NDynamicRendererModule.html":{},"injectables/NDynamicRendererService.html":{}}}],["createunflattenobject",{"_index":201,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["createunflattenobject(data",{"_index":232,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["css",{"_index":313,"title":{},"body":{"interfaces/Panels.html":{},"index.html":{}}}],["custom",{"_index":415,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":382,"title":{},"body":{"index.html":{}}}],["data",{"_index":236,"title":{},"body":{"injectables/NDynamicRendererService.html":{},"index.html":{}}}],["decides",{"_index":112,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{}}}],["declarations",{"_index":177,"title":{},"body":{"modules/NDynamicRendererModule.html":{}}}],["decorator",{"_index":271,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["deep",{"_index":263,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["deepclone",{"_index":256,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["deepclones",{"_index":260,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["deepmerged",{"_index":265,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["default",{"_index":154,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":34,"title":{},"body":{"interfaces/Layout.html":{},"interfaces/Options.html":{},"index.html":{}}}],["defines",{"_index":460,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":169,"title":{"dependencies.html":{}},"body":{"modules/NDynamicRendererModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":402,"title":{},"body":{"index.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/ChangeEvent.html":{},"interfaces/Function.html":{},"interfaces/Layout.html":{},"interfaces/Leaf.html":{},"interfaces/Metadata.html":{},"components/NDynamicRendererComponent.html":{},"modules/NDynamicRendererModule.html":{},"injectables/NDynamicRendererService.html":{},"interfaces/Options.html":{},"interfaces/Panels.html":{},"interfaces/Section.html":{}}}],["desides",{"_index":489,"title":{},"body":{"index.html":{}}}],["desktop",{"_index":38,"title":{},"body":{"interfaces/Layout.html":{},"index.html":{}}}],["details",{"_index":462,"title":{},"body":{"index.html":{}}}],["detects",{"_index":125,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["different",{"_index":35,"title":{},"body":{"interfaces/Layout.html":{}}}],["directives",{"_index":164,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["documentation",{"_index":319,"title":{},"body":{"coverage.html":{}}}],["download",{"_index":394,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":6,"title":{},"body":{"interfaces/ChangeEvent.html":{},"interfaces/Config.html":{},"interfaces/Flex.html":{},"interfaces/Function.html":{},"interfaces/KeyValue.html":{},"interfaces/Layout.html":{},"interfaces/Leaf.html":{},"interfaces/Metadata.html":{},"components/NDynamicRendererComponent.html":{},"modules/NDynamicRendererModule.html":{},"injectables/NDynamicRendererService.html":{},"interfaces/Options.html":{},"interfaces/OutputEvents.html":{},"interfaces/Panels.html":{},"interfaces/Section.html":{},"interfaces/Sections.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dynamically",{"_index":384,"title":{},"body":{"index.html":{}}}],["dynamicrendererservice",{"_index":436,"title":{},"body":{"index.html":{}}}],["each",{"_index":304,"title":{},"body":{"interfaces/Panels.html":{},"interfaces/Section.html":{}}}],["eg",{"_index":290,"title":{},"body":{"interfaces/Options.html":{}}}],["enter",{"_index":403,"title":{},"body":{"index.html":{}}}],["eq",{"_index":479,"title":{},"body":{"index.html":{}}}],["error",{"_index":119,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"index.html":{}}}],["erroremit",{"_index":89,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["erroremit(error",{"_index":118,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["errors",{"_index":221,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["evaluated",{"_index":241,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["evaluateexpression",{"_index":202,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["evaluateexpression(expr",{"_index":238,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["evaluates",{"_index":239,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["event",{"_index":120,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["eventemitter",{"_index":110,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["executes",{"_index":144,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["expanded",{"_index":311,"title":{},"body":{"interfaces/Panels.html":{},"index.html":{}}}],["expansion",{"_index":306,"title":{},"body":{"interfaces/Panels.html":{}}}],["expansional",{"_index":312,"title":{},"body":{"interfaces/Panels.html":{}}}],["export",{"_index":435,"title":{},"body":{"index.html":{}}}],["exports",{"_index":178,"title":{},"body":{"modules/NDynamicRendererModule.html":{}}}],["expr",{"_index":240,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["expression",{"_index":57,"title":{},"body":{"interfaces/Metadata.html":{},"injectables/NDynamicRendererService.html":{},"index.html":{}}}],["false",{"_index":464,"title":{},"body":{"index.html":{}}}],["fb",{"_index":107,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["female",{"_index":481,"title":{},"body":{"index.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/ChangeEvent.html":{},"interfaces/Config.html":{},"interfaces/Flex.html":{},"interfaces/Function.html":{},"interfaces/KeyValue.html":{},"interfaces/Layout.html":{},"interfaces/Leaf.html":{},"interfaces/Metadata.html":{},"components/NDynamicRendererComponent.html":{},"modules/NDynamicRendererModule.html":{},"injectables/NDynamicRendererService.html":{},"interfaces/Options.html":{},"interfaces/OutputEvents.html":{},"interfaces/Panels.html":{},"interfaces/Section.html":{},"interfaces/Sections.html":{},"coverage.html":{}}}],["file:n",{"_index":365,"title":{},"body":{"dependencies.html":{}}}],["fires",{"_index":121,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["first",{"_index":451,"title":{},"body":{"index.html":{}}}],["flex",{"_index":24,"title":{"interfaces/Flex.html":{}},"body":{"interfaces/Flex.html":{},"interfaces/Layout.html":{},"interfaces/Panels.html":{},"coverage.html":{},"index.html":{}}}],["flexval",{"_index":80,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["follow",{"_index":454,"title":{},"body":{"index.html":{}}}],["following",{"_index":387,"title":{},"body":{"index.html":{}}}],["form",{"_index":259,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["formbuilder",{"_index":108,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["formchangedetection",{"_index":90,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["formcontrol",{"_index":64,"title":{},"body":{"interfaces/Metadata.html":{},"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{}}}],["formcontroller",{"_index":294,"title":{},"body":{"interfaces/Options.html":{}}}],["formcontrolmapper",{"_index":81,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["formcontrols",{"_index":127,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["formgroup",{"_index":129,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{}}}],["formgroupval",{"_index":278,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["forroot",{"_index":180,"title":{},"body":{"modules/NDynamicRendererModule.html":{},"index.html":{}}}],["forroot(config",{"_index":181,"title":{},"body":{"modules/NDynamicRendererModule.html":{}}}],["full",{"_index":380,"title":{},"body":{"index.html":{}}}],["function",{"_index":15,"title":{"interfaces/Function.html":{}},"body":{"interfaces/ChangeEvent.html":{},"interfaces/Function.html":{},"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{},"coverage.html":{}}}],["functionname",{"_index":25,"title":{},"body":{"interfaces/Function.html":{},"index.html":{}}}],["functions",{"_index":11,"title":{},"body":{"interfaces/ChangeEvent.html":{},"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{},"index.html":{}}}],["generated",{"_index":295,"title":{},"body":{"interfaces/Options.html":{},"index.html":{}}}],["generates",{"_index":386,"title":{},"body":{"index.html":{}}}],["getcomponent",{"_index":91,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["getcomponent(metadata",{"_index":130,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["getcomponents",{"_index":203,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["getcomponents(metadata",{"_index":242,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["getconfig",{"_index":288,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["getinputs",{"_index":92,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["getinputs(leaf",{"_index":135,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["getinputtype",{"_index":204,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["getinputtype(type",{"_index":243,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["getmessage1",{"_index":473,"title":{},"body":{"index.html":{}}}],["getmessage2",{"_index":477,"title":{},"body":{"index.html":{}}}],["getmessage3",{"_index":478,"title":{},"body":{"index.html":{}}}],["getnewcomponent",{"_index":205,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["getnewcomponent(metadata",{"_index":244,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["getpathforschema",{"_index":206,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["getpathforschema(model_path",{"_index":245,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["gets",{"_index":250,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["getting",{"_index":375,"title":{"index.html":{}},"body":{}}],["getvalidatorsfromschema",{"_index":207,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["getvalidatorsfromschema(schema",{"_index":249,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["given",{"_index":234,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["global",{"_index":223,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["handling",{"_index":494,"title":{},"body":{"index.html":{}}}],["header",{"_index":310,"title":{},"body":{"interfaces/Panels.html":{}}}],["helps",{"_index":255,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["homepagecomponent",{"_index":428,"title":{},"body":{"index.html":{}}}],["https://example.com/object1666938433.json",{"_index":502,"title":{},"body":{"index.html":{}}}],["i.e",{"_index":193,"title":{},"body":{"modules/NDynamicRendererModule.html":{}}}],["id",{"_index":47,"title":{},"body":{"interfaces/Leaf.html":{},"index.html":{}}}],["identifier",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":70,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["import",{"_index":429,"title":{},"body":{"index.html":{}}}],["imports",{"_index":21,"title":{},"body":{"interfaces/Config.html":{},"modules/NDynamicRendererModule.html":{},"index.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"interfaces/ChangeEvent.html":{},"interfaces/Config.html":{},"interfaces/Flex.html":{},"interfaces/Function.html":{},"interfaces/Layout.html":{},"interfaces/Leaf.html":{},"interfaces/Metadata.html":{},"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{},"interfaces/Options.html":{},"interfaces/OutputEvents.html":{},"interfaces/Panels.html":{},"interfaces/Section.html":{},"interfaces/Sections.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":31,"title":{},"body":{"interfaces/KeyValue.html":{},"interfaces/Options.html":{}}}],["individual",{"_index":251,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ChangeEvent.html":{},"interfaces/Config.html":{},"interfaces/Flex.html":{},"interfaces/Function.html":{},"interfaces/KeyValue.html":{},"interfaces/Layout.html":{},"interfaces/Leaf.html":{},"interfaces/Metadata.html":{},"components/NDynamicRendererComponent.html":{},"modules/NDynamicRendererModule.html":{},"injectables/NDynamicRendererService.html":{},"interfaces/Options.html":{},"interfaces/OutputEvents.html":{},"interfaces/Panels.html":{},"interfaces/Section.html":{},"interfaces/Sections.html":{}}}],["information",{"_index":133,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{}}}],["initview",{"_index":93,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["initview(viewpanels",{"_index":137,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["inject",{"_index":453,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":194,"title":{"injectables/NDynamicRendererService.html":{}},"body":{"coverage.html":{},"index.html":{},"overview.html":{}}}],["injectables",{"_index":195,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["input1component",{"_index":433,"title":{},"body":{"index.html":{}}}],["inputclasscomponent",{"_index":417,"title":{},"body":{"index.html":{}}}],["inputclasscomponent1",{"_index":425,"title":{},"body":{"index.html":{}}}],["inputcomponent",{"_index":431,"title":{},"body":{"index.html":{}}}],["inputs",{"_index":56,"title":{},"body":{"interfaces/Metadata.html":{},"components/NDynamicRendererComponent.html":{},"interfaces/Options.html":{},"index.html":{}}}],["install",{"_index":392,"title":{},"body":{"index.html":{}}}],["installation",{"_index":390,"title":{},"body":{"index.html":{}}}],["installed",{"_index":411,"title":{},"body":{"index.html":{}}}],["instance",{"_index":131,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ChangeEvent.html":{},"interfaces/Config.html":{},"interfaces/Flex.html":{},"interfaces/Function.html":{},"interfaces/KeyValue.html":{},"interfaces/Layout.html":{},"interfaces/Leaf.html":{},"interfaces/Metadata.html":{},"interfaces/Options.html":{},"interfaces/OutputEvents.html":{},"interfaces/Panels.html":{},"interfaces/Section.html":{},"interfaces/Sections.html":{}},"body":{"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ChangeEvent.html":{},"interfaces/Config.html":{},"interfaces/Flex.html":{},"interfaces/Function.html":{},"interfaces/KeyValue.html":{},"interfaces/Layout.html":{},"interfaces/Leaf.html":{},"interfaces/Metadata.html":{},"interfaces/Options.html":{},"interfaces/OutputEvents.html":{},"interfaces/Panels.html":{},"interfaces/Section.html":{},"interfaces/Sections.html":{},"overview.html":{}}}],["intitialization",{"_index":225,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["it's",{"_index":274,"title":{},"body":{"injectables/NDynamicRendererService.html":{},"index.html":{}}}],["item",{"_index":305,"title":{},"body":{"interfaces/Panels.html":{},"interfaces/Section.html":{}}}],["iterates",{"_index":139,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["key",{"_index":32,"title":{},"body":{"interfaces/KeyValue.html":{},"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{},"interfaces/Options.html":{},"interfaces/Panels.html":{},"index.html":{}}}],["keyvalue",{"_index":30,"title":{"interfaces/KeyValue.html":{}},"body":{"interfaces/KeyValue.html":{},"interfaces/Leaf.html":{},"interfaces/Metadata.html":{},"interfaces/Panels.html":{},"interfaces/Section.html":{},"coverage.html":{}}}],["label",{"_index":302,"title":{},"body":{"interfaces/Options.html":{},"index.html":{}}}],["layout",{"_index":33,"title":{"interfaces/Layout.html":{}},"body":{"interfaces/Layout.html":{},"interfaces/Leaf.html":{},"interfaces/Panels.html":{},"interfaces/Section.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["leaf",{"_index":42,"title":{"interfaces/Leaf.html":{}},"body":{"interfaces/Leaf.html":{},"components/NDynamicRendererComponent.html":{},"interfaces/Section.html":{},"coverage.html":{}}}],["leafs",{"_index":317,"title":{},"body":{"interfaces/Section.html":{},"index.html":{}}}],["legacy",{"_index":408,"title":{},"body":{"index.html":{}}}],["level",{"_index":45,"title":{},"body":{"interfaces/Leaf.html":{},"interfaces/Panels.html":{},"interfaces/Section.html":{},"index.html":{}}}],["libraries",{"_index":185,"title":{},"body":{"modules/NDynamicRendererModule.html":{},"index.html":{}}}],["library",{"_index":22,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Metadata.html":{},"interfaces/Options.html":{},"index.html":{}}}],["library1",{"_index":424,"title":{},"body":{"index.html":{}}}],["library2",{"_index":426,"title":{},"body":{"index.html":{}}}],["libraryname",{"_index":188,"title":{},"body":{"modules/NDynamicRendererModule.html":{},"index.html":{}}}],["life",{"_index":381,"title":{},"body":{"index.html":{}}}],["literal",{"_index":519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["load_deep",{"_index":208,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["load_deep(a",{"_index":253,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["loaded",{"_index":224,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["look",{"_index":388,"title":{},"body":{"index.html":{}}}],["manage",{"_index":399,"title":{},"body":{"index.html":{}}}],["manager",{"_index":396,"title":{},"body":{"index.html":{}}}],["manulife",{"_index":470,"title":{},"body":{"index.html":{}}}],["many",{"_index":422,"title":{},"body":{"index.html":{}}}],["matching",{"_index":19,"title":{},"body":{"interfaces/ChangeEvent.html":{},"interfaces/Config.html":{},"interfaces/Flex.html":{},"interfaces/Function.html":{},"interfaces/KeyValue.html":{},"interfaces/Layout.html":{},"interfaces/Leaf.html":{},"interfaces/Metadata.html":{},"components/NDynamicRendererComponent.html":{},"modules/NDynamicRendererModule.html":{},"injectables/NDynamicRendererService.html":{},"interfaces/Options.html":{},"interfaces/OutputEvents.html":{},"interfaces/Panels.html":{},"interfaces/Section.html":{},"interfaces/Sections.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["merge",{"_index":264,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["mergedeep",{"_index":209,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["mergedeep(model",{"_index":258,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["metadata",{"_index":48,"title":{"interfaces/Metadata.html":{}},"body":{"interfaces/Leaf.html":{},"interfaces/Metadata.html":{},"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{},"coverage.html":{},"index.html":{}}}],["method",{"_index":450,"title":{},"body":{"index.html":{}}}],["methods",{"_index":87,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"modules/NDynamicRendererModule.html":{},"injectables/NDynamicRendererService.html":{}}}],["miscellaneous",{"_index":509,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":39,"title":{},"body":{"interfaces/Layout.html":{},"index.html":{}}}],["mobile,tablet,desktop",{"_index":315,"title":{},"body":{"interfaces/Panels.html":{},"index.html":{}}}],["model",{"_index":99,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{},"interfaces/Options.html":{},"index.html":{}}}],["model_path",{"_index":152,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{},"interfaces/Options.html":{}}}],["modelchange",{"_index":102,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{}}}],["modelform",{"_index":83,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["modelpath",{"_index":153,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{}}}],["modelschema",{"_index":198,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["module",{"_index":166,"title":{"modules/NDynamicRendererModule.html":{}},"body":{"modules/NDynamicRendererModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":168,"title":{"modules.html":{}},"body":{"modules/NDynamicRendererModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":189,"title":{},"body":{"modules/NDynamicRendererModule.html":{}}}],["n",{"_index":73,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"dependencies.html":{},"index.html":{}}}],["name",{"_index":26,"title":{},"body":{"interfaces/Function.html":{},"interfaces/Metadata.html":{},"components/NDynamicRendererComponent.html":{},"modules/NDynamicRendererModule.html":{},"injectables/NDynamicRendererService.html":{},"interfaces/Panels.html":{},"index.html":{}}}],["name,version,angular",{"_index":404,"title":{},"body":{"index.html":{}}}],["ncomponentmodules",{"_index":438,"title":{},"body":{"index.html":{}}}],["ncomponents",{"_index":430,"title":{},"body":{"index.html":{}}}],["ndynamicrenderer",{"_index":377,"title":{},"body":{"index.html":{}}}],["ndynamicrenderercomponent",{"_index":65,"title":{"components/NDynamicRendererComponent.html":{}},"body":{"components/NDynamicRendererComponent.html":{},"modules/NDynamicRendererModule.html":{},"coverage.html":{},"overview.html":{}}}],["ndynamicrenderermodule",{"_index":167,"title":{"modules/NDynamicRendererModule.html":{}},"body":{"modules/NDynamicRendererModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["ndynamicrendererservice",{"_index":106,"title":{"injectables/NDynamicRendererService.html":{}},"body":{"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{},"coverage.html":{}}}],["need",{"_index":452,"title":{},"body":{"index.html":{}}}],["needs",{"_index":53,"title":{},"body":{"interfaces/Metadata.html":{},"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{}}}],["neutrinos",{"_index":423,"title":{},"body":{"index.html":{}}}],["new",{"_index":344,"title":{},"body":{"coverage.html":{}}}],["ng",{"_index":367,"title":{},"body":{"dependencies.html":{}}}],["ngoninit",{"_index":94,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["nmatbuttoncomponent",{"_index":471,"title":{},"body":{"index.html":{}}}],["now",{"_index":448,"title":{},"body":{"index.html":{}}}],["npm",{"_index":391,"title":{},"body":{"index.html":{}}}],["number",{"_index":29,"title":{},"body":{"interfaces/Function.html":{},"interfaces/Leaf.html":{},"components/NDynamicRendererComponent.html":{}}}],["obj",{"_index":281,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["object",{"_index":142,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{},"interfaces/Options.html":{},"index.html":{}}}],["objects",{"_index":261,"title":{},"body":{"injectables/NDynamicRendererService.html":{},"index.html":{}}}],["onerror",{"_index":103,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"index.html":{}}}],["onerror($event)\";example",{"_index":497,"title":{},"body":{"index.html":{}}}],["onerror(error",{"_index":495,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":71,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["open",{"_index":398,"title":{},"body":{"index.html":{}}}],["optional",{"_index":14,"title":{},"body":{"interfaces/ChangeEvent.html":{},"interfaces/Function.html":{},"interfaces/Leaf.html":{},"interfaces/Metadata.html":{},"components/NDynamicRendererComponent.html":{},"modules/NDynamicRendererModule.html":{},"injectables/NDynamicRendererService.html":{},"interfaces/Options.html":{},"interfaces/Panels.html":{},"interfaces/Section.html":{},"index.html":{}}}],["options",{"_index":55,"title":{"interfaces/Options.html":{}},"body":{"interfaces/Metadata.html":{},"interfaces/Options.html":{},"coverage.html":{},"index.html":{}}}],["out",{"_index":175,"title":{},"body":{"modules/NDynamicRendererModule.html":{},"overview.html":{}}}],["output_events",{"_index":292,"title":{},"body":{"interfaces/Options.html":{},"index.html":{}}}],["outputevents",{"_index":293,"title":{"interfaces/OutputEvents.html":{}},"body":{"interfaces/Options.html":{},"interfaces/OutputEvents.html":{},"coverage.html":{}}}],["outputmethods",{"_index":96,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["outputmethods(change_event",{"_index":143,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["outputs",{"_index":84,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"index.html":{}}}],["overview",{"_index":506,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":347,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["pair",{"_index":235,"title":{},"body":{"injectables/NDynamicRendererService.html":{},"interfaces/Panels.html":{},"index.html":{}}}],["pairs",{"_index":486,"title":{},"body":{"index.html":{}}}],["panel",{"_index":138,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"interfaces/Panels.html":{},"miscellaneous/typealiases.html":{}}}],["panel?.panel_name",{"_index":163,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["panel_name",{"_index":309,"title":{},"body":{"interfaces/Panels.html":{},"index.html":{}}}],["panels",{"_index":303,"title":{"interfaces/Panels.html":{}},"body":{"interfaces/Panels.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":109,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"modules/NDynamicRendererModule.html":{},"injectables/NDynamicRendererService.html":{}}}],["parse",{"_index":298,"title":{},"body":{"interfaces/Options.html":{}}}],["parsemodel",{"_index":97,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["pass",{"_index":410,"title":{},"body":{"index.html":{}}}],["passed",{"_index":28,"title":{},"body":{"interfaces/Function.html":{},"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{},"interfaces/Options.html":{},"index.html":{}}}],["passes",{"_index":136,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["path",{"_index":246,"title":{},"body":{"injectables/NDynamicRendererService.html":{},"interfaces/Options.html":{}}}],["plugins",{"_index":400,"title":{},"body":{"index.html":{}}}],["pops",{"_index":122,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["prepare",{"_index":421,"title":{},"body":{"index.html":{}}}],["prepareformcontrol",{"_index":98,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["prepareformcontrol(model_path",{"_index":149,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["prepares",{"_index":151,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{}}}],["preparevalidators",{"_index":210,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["preparevalidators(validators",{"_index":266,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["preparing",{"_index":413,"title":{},"body":{"index.html":{}}}],["present",{"_index":488,"title":{},"body":{"index.html":{}}}],["projects/.../interface.ts",{"_index":512,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../test.ts",{"_index":516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/n",{"_index":5,"title":{},"body":{"interfaces/ChangeEvent.html":{},"interfaces/Config.html":{},"interfaces/Flex.html":{},"interfaces/Function.html":{},"interfaces/KeyValue.html":{},"interfaces/Layout.html":{},"interfaces/Leaf.html":{},"interfaces/Metadata.html":{},"components/NDynamicRendererComponent.html":{},"modules/NDynamicRendererModule.html":{},"injectables/NDynamicRendererService.html":{},"interfaces/Options.html":{},"interfaces/OutputEvents.html":{},"interfaces/Panels.html":{},"interfaces/Section.html":{},"interfaces/Sections.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":13,"title":{"properties.html":{}},"body":{"interfaces/ChangeEvent.html":{},"interfaces/Config.html":{},"interfaces/Flex.html":{},"interfaces/Function.html":{},"interfaces/Layout.html":{},"interfaces/Leaf.html":{},"interfaces/Metadata.html":{},"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{},"interfaces/Options.html":{},"interfaces/OutputEvents.html":{},"interfaces/Panels.html":{},"interfaces/Section.html":{},"interfaces/Sections.html":{},"index.html":{},"properties.html":{}}}],["property",{"_index":252,"title":{},"body":{"injectables/NDynamicRendererService.html":{},"index.html":{}}}],["provided",{"_index":186,"title":{},"body":{"modules/NDynamicRendererModule.html":{},"injectables/NDynamicRendererService.html":{}}}],["public",{"_index":82,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"modules/NDynamicRendererModule.html":{}}}],["pulled",{"_index":296,"title":{},"body":{"interfaces/Options.html":{}}}],["readmodel",{"_index":211,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["readmodel(model_path",{"_index":267,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["reads",{"_index":268,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["readvalue",{"_index":212,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["readvalue(model_path",{"_index":269,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["registered",{"_index":128,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["removed",{"_index":272,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["render",{"_index":134,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{},"index.html":{}}}],["rendered",{"_index":114,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["renderer",{"_index":74,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"index.html":{}}}],["renderer.component.css",{"_index":76,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["renderer.component.html",{"_index":78,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["renderer.component.ts",{"_index":69,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"coverage.html":{}}}],["renderer.module.ts",{"_index":176,"title":{},"body":{"modules/NDynamicRendererModule.html":{}}}],["renderer.service.ts",{"_index":196,"title":{},"body":{"injectables/NDynamicRendererService.html":{},"coverage.html":{}}}],["renderer/n",{"_index":68,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"coverage.html":{}}}],["renderer/src/lib/interfaces/interface.ts",{"_index":7,"title":{},"body":{"interfaces/ChangeEvent.html":{},"interfaces/Config.html":{},"interfaces/Flex.html":{},"interfaces/Function.html":{},"interfaces/KeyValue.html":{},"interfaces/Layout.html":{},"interfaces/Leaf.html":{},"interfaces/Metadata.html":{},"interfaces/Options.html":{},"interfaces/OutputEvents.html":{},"interfaces/Panels.html":{},"interfaces/Section.html":{},"interfaces/Sections.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["renderer/src/lib/n",{"_index":67,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"modules/NDynamicRendererModule.html":{},"injectables/NDynamicRendererService.html":{},"coverage.html":{}}}],["renderer/src/test.ts",{"_index":340,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["rendererconfig",{"_index":199,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["renderered",{"_index":54,"title":{},"body":{"interfaces/Metadata.html":{}}}],["rendererimports",{"_index":437,"title":{},"body":{"index.html":{}}}],["rendering",{"_index":378,"title":{},"body":{"index.html":{}}}],["require",{"_index":343,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":184,"title":{},"body":{"modules/NDynamicRendererModule.html":{},"index.html":{}}}],["reset",{"_index":174,"title":{},"body":{"modules/NDynamicRendererModule.html":{},"overview.html":{}}}],["resetconfig",{"_index":190,"title":{},"body":{"modules/NDynamicRendererModule.html":{},"injectables/NDynamicRendererService.html":{}}}],["resetconfig(config",{"_index":191,"title":{},"body":{"modules/NDynamicRendererModule.html":{}}}],["resetrenderercomponents",{"_index":441,"title":{},"body":{"index.html":{}}}],["resets",{"_index":192,"title":{},"body":{"modules/NDynamicRendererModule.html":{}}}],["resolutions.set",{"_index":491,"title":{},"body":{"index.html":{}}}],["respective",{"_index":379,"title":{},"body":{"index.html":{}}}],["responsive",{"_index":314,"title":{},"body":{"interfaces/Panels.html":{},"index.html":{}}}],["result",{"_index":158,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{}}}],["results",{"_index":18,"title":{},"body":{"interfaces/ChangeEvent.html":{},"interfaces/Config.html":{},"interfaces/Flex.html":{},"interfaces/Function.html":{},"interfaces/KeyValue.html":{},"interfaces/Layout.html":{},"interfaces/Leaf.html":{},"interfaces/Metadata.html":{},"components/NDynamicRendererComponent.html":{},"modules/NDynamicRendererModule.html":{},"injectables/NDynamicRendererService.html":{},"interfaces/Options.html":{},"interfaces/OutputEvents.html":{},"interfaces/Panels.html":{},"interfaces/Section.html":{},"interfaces/Sections.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":287,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["returns",{"_index":116,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"modules/NDynamicRendererModule.html":{},"injectables/NDynamicRendererService.html":{}}}],["root",{"_index":499,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":369,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":472,"title":{},"body":{"index.html":{}}}],["schema",{"_index":100,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{},"interfaces/Options.html":{},"index.html":{}}}],["schema\";onerror",{"_index":493,"title":{},"body":{"index.html":{}}}],["schema.supports",{"_index":455,"title":{},"body":{"index.html":{}}}],["screen",{"_index":36,"title":{},"body":{"interfaces/Layout.html":{},"index.html":{}}}],["section",{"_index":150,"title":{"interfaces/Section.html":{}},"body":{"components/NDynamicRendererComponent.html":{},"interfaces/Section.html":{},"interfaces/Sections.html":{},"coverage.html":{},"index.html":{}}}],["sections",{"_index":316,"title":{"interfaces/Sections.html":{}},"body":{"interfaces/Panels.html":{},"interfaces/Sections.html":{},"coverage.html":{},"index.html":{}}}],["selector",{"_index":72,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"index.html":{}}}],["sends",{"_index":230,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["service",{"_index":409,"title":{},"body":{"index.html":{}}}],["set",{"_index":44,"title":{},"body":{"interfaces/Leaf.html":{},"interfaces/Panels.html":{},"interfaces/Section.html":{}}}],["setresetconfig(config",{"_index":289,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["sets",{"_index":59,"title":{},"body":{"interfaces/Metadata.html":{}}}],["show",{"_index":60,"title":{},"body":{"interfaces/Metadata.html":{},"components/NDynamicRendererComponent.html":{},"index.html":{}}}],["sizes",{"_index":37,"title":{},"body":{"interfaces/Layout.html":{}}}],["someother",{"_index":299,"title":{},"body":{"interfaces/Options.html":{}}}],["spec\\.ts",{"_index":518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["started",{"_index":376,"title":{"index.html":{}},"body":{}}],["statements",{"_index":321,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":179,"title":{},"body":{"modules/NDynamicRendererModule.html":{}}}],["story",{"_index":397,"title":{},"body":{"index.html":{}}}],["str",{"_index":275,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["strategy",{"_index":63,"title":{},"body":{"interfaces/Metadata.html":{}}}],["string",{"_index":23,"title":{},"body":{"interfaces/Config.html":{},"interfaces/Flex.html":{},"interfaces/Function.html":{},"interfaces/KeyValue.html":{},"interfaces/Leaf.html":{},"interfaces/Metadata.html":{},"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{},"interfaces/Options.html":{},"interfaces/Panels.html":{},"interfaces/Section.html":{}}}],["structure",{"_index":414,"title":{},"body":{"index.html":{}}}],["structured",{"_index":389,"title":{},"body":{"index.html":{}}}],["styles",{"_index":49,"title":{},"body":{"interfaces/Leaf.html":{},"interfaces/Panels.html":{},"interfaces/Section.html":{},"index.html":{}}}],["styles','layout",{"_index":484,"title":{},"body":{"index.html":{}}}],["styles,layout",{"_index":43,"title":{},"body":{"interfaces/Leaf.html":{},"interfaces/Panels.html":{},"interfaces/Section.html":{}}}],["styleurls",{"_index":75,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"index.html":{}}}],["submit",{"_index":514,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["support",{"_index":383,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":504,"title":{},"body":{"modules.html":{}}}],["table",{"_index":346,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":345,"title":{},"body":{"coverage.html":{}}}],["tablet",{"_index":40,"title":{},"body":{"interfaces/Layout.html":{},"index.html":{}}}],["takes",{"_index":9,"title":{},"body":{"interfaces/ChangeEvent.html":{},"interfaces/Options.html":{}}}],["template",{"_index":482,"title":{},"body":{"index.html":{}}}],["templateurl",{"_index":77,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"index.html":{}}}],["this.fb.group",{"_index":157,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["this.ncomponentmodules",{"_index":443,"title":{},"body":{"index.html":{}}}],["this.ncomponentmodules={...inputcomponent,...input1component",{"_index":440,"title":{},"body":{"index.html":{}}}],["this.ndynamicrenderermodule.resetconfig(config",{"_index":444,"title":{},"body":{"index.html":{}}}],["this.outputmethods(result",{"_index":160,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["through",{"_index":140,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{}}}],["title",{"_index":503,"title":{},"body":{"index.html":{}}}],["traverse",{"_index":247,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["trimmodelvalue",{"_index":213,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["trimmodelvalue(str",{"_index":270,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["true",{"_index":466,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":371,"title":{},"body":{"dependencies.html":{}}}],["tv",{"_index":41,"title":{},"body":{"interfaces/Layout.html":{},"interfaces/Panels.html":{},"index.html":{}}}],["two",{"_index":456,"title":{},"body":{"index.html":{}}}],["type",{"_index":16,"title":{},"body":{"interfaces/ChangeEvent.html":{},"interfaces/Config.html":{},"interfaces/Flex.html":{},"interfaces/Function.html":{},"interfaces/Layout.html":{},"interfaces/Leaf.html":{},"interfaces/Metadata.html":{},"components/NDynamicRendererComponent.html":{},"modules/NDynamicRendererModule.html":{},"injectables/NDynamicRendererService.html":{},"interfaces/Options.html":{},"interfaces/OutputEvents.html":{},"interfaces/Panels.html":{},"interfaces/Section.html":{},"interfaces/Sections.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":510,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typemapper",{"_index":85,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["ui",{"_index":115,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"index.html":{}}}],["unflatten",{"_index":233,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["unflattened",{"_index":237,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["up",{"_index":123,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["update",{"_index":62,"title":{},"body":{"interfaces/Metadata.html":{}}}],["updated",{"_index":231,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["updateobject",{"_index":214,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["updateobject(formgroupval",{"_index":277,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["updateon",{"_index":61,"title":{},"body":{"interfaces/Metadata.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["updates",{"_index":147,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{}}}],["usage",{"_index":393,"title":{},"body":{"index.html":{}}}],["used",{"_index":297,"title":{},"body":{"interfaces/Options.html":{}}}],["user",{"_index":300,"title":{},"body":{"interfaces/Options.html":{}}}],["uuid1",{"_index":468,"title":{},"body":{"index.html":{}}}],["validate",{"_index":286,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["validated",{"_index":282,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["validateobjectwithschema",{"_index":215,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["validateobjectwithschema(obj",{"_index":279,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["validateresult",{"_index":216,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["validateresult(result",{"_index":285,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["validates",{"_index":280,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["validation",{"_index":284,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["validators",{"_index":248,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["value",{"_index":155,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{},"interfaces/Options.html":{},"interfaces/Panels.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":161,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["variable",{"_index":341,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":515,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":50,"title":{},"body":{"interfaces/Metadata.html":{},"index.html":{},"properties.html":{}}}],["view",{"_index":101,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"injectables/NDynamicRendererService.html":{},"index.html":{}}}],["view\";every",{"_index":483,"title":{},"body":{"index.html":{}}}],["viewfunctions",{"_index":227,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["viewpanels",{"_index":86,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["void",{"_index":124,"title":{},"body":{"components/NDynamicRendererComponent.html":{},"modules/NDynamicRendererModule.html":{},"injectables/NDynamicRendererService.html":{}}}],["want",{"_index":262,"title":{},"body":{"injectables/NDynamicRendererService.html":{}}}],["way",{"_index":457,"title":{},"body":{"index.html":{}}}],["well",{"_index":459,"title":{},"body":{"index.html":{}}}],["whether",{"_index":113,"title":{},"body":{"components/NDynamicRendererComponent.html":{}}}],["width",{"_index":490,"title":{},"body":{"index.html":{}}}],["yes",{"_index":187,"title":{},"body":{"modules/NDynamicRendererModule.html":{}}}],["zone.js",{"_index":373,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":173,"title":{},"body":{"modules/NDynamicRendererModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ChangeEvent.html":{"url":"interfaces/ChangeEvent.html","title":"interface - ChangeEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChangeEvent\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/n-dynamic-renderer/src/lib/interfaces/interface.ts\n        \n\n\n            \n                Description\n            \n            \n                It takes array of functions\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            functions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        functions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        functions:         Function[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Function[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Config.html":{"url":"interfaces/Config.html","title":"interface - Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Config\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/n-dynamic-renderer/src/lib/interfaces/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            imports\n                                        \n                                \n                                \n                                        \n                                            library\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        imports\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imports:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        library\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        library:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Flex.html":{"url":"interfaces/Flex.html","title":"interface - Flex","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Flex\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/n-dynamic-renderer/src/lib/interfaces/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            flex\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        flex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        flex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Function.html":{"url":"interfaces/Function.html","title":"interface - Function","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Function\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/n-dynamic-renderer/src/lib/interfaces/interface.ts\n        \n\n\n            \n                Description\n            \n            \n                functionName - Name of the function.\nArguments - Which are optional are passed as arguments.\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            arguments\n                                        \n                                \n                                \n                                        \n                                            functionName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        arguments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        arguments:     number[] | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[] | string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        functionName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        functionName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/KeyValue.html":{"url":"interfaces/KeyValue.html","title":"interface - KeyValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  KeyValue\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/n-dynamic-renderer/src/lib/interfaces/interface.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Layout.html":{"url":"interfaces/Layout.html","title":"interface - Layout","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Layout\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/n-dynamic-renderer/src/lib/interfaces/interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Define flex for different screen sizes\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            desktop\n                                        \n                                \n                                \n                                        \n                                            mobile\n                                        \n                                \n                                \n                                        \n                                            tablet\n                                        \n                                \n                                \n                                        \n                                            tv\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desktop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desktop:         Flex\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Flex\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mobile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mobile:         Flex\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Flex\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tablet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tablet:         Flex\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Flex\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tv\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tv:         Flex\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Flex\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Leaf.html":{"url":"interfaces/Leaf.html","title":"interface - Leaf","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Leaf\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/n-dynamic-renderer/src/lib/interfaces/interface.ts\n        \n\n\n            \n                Description\n            \n            \n                 styles,layout can be set on the Leaf level too.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            class\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            layout\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            styles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        layout:         KeyValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         KeyValue\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         Metadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Metadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        styles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        styles:         KeyValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         KeyValue\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Metadata.html":{"url":"interfaces/Metadata.html","title":"interface - Metadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Metadata\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/n-dynamic-renderer/src/lib/interfaces/interface.ts\n        \n\n\n            \n                Description\n            \n            \n                version- Version of the library.\nlibrary- Name of the library.\ncomponent_name - Name of the component that needs to be renderered.\noptions- The options are the inputs to the component.\nexpression - The condition that sets to show the component.\nupdateOn - The update strategy on the formControl\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            component_name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            expression\n                                        \n                                \n                                \n                                        \n                                            library\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            updateOn\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        component_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expression\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expression:         KeyValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         KeyValue\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        library\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        library:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         Options\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Options\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateOn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updateOn:         updateOn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         updateOn\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NDynamicRendererComponent.html":{"url":"components/NDynamicRendererComponent.html","title":"component - NDynamicRendererComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NDynamicRendererComponent\n\n\n\n        \n            Info\n        \n\n\n\n    \n    File\n\n\n    projects/n-dynamic-renderer/src/lib/n-dynamic-renderer/n-dynamic-renderer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                n-dynamic-renderer\n            \n\n            \n                styleUrls\n                ./n-dynamic-renderer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./n-dynamic-renderer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ajv\n                            \n                            \n                                flexVal\n                            \n                            \n                                formControlMapper\n                            \n                            \n                                    Public\n                                modelForm\n                            \n                            \n                                outputs\n                            \n                            \n                                typeMapper\n                            \n                            \n                                viewPanels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                componentValidation\n                            \n                            \n                                errorEmit\n                            \n                            \n                                formChangeDetection\n                            \n                            \n                                getComponent\n                            \n                            \n                                getInputs\n                            \n                            \n                                initView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                outputMethods\n                            \n                            \n                                parseModel\n                            \n                            \n                                prepareFormControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                schema\n                            \n                            \n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                modelChange\n                            \n                            \n                                onError\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(nDynamicRendererService: NDynamicRendererService, fb: FormBuilder)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nDynamicRendererService\n                                                  \n                                                        \n                                                                        NDynamicRendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        view\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        modelChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        onError\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        componentValidation\n                        \n                    \n                \n            \n            \n                \ncomponentValidation(metadata: Metadata)\n                \n            \n\n\n\n\n            \n                \n                    Decides whether the component to be rendered on the UI\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metadata\n                                    \n                                                Metadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \nA boolean whether to show the component.\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorEmit\n                        \n                    \n                \n            \n            \n                \nerrorEmit(error: any)\n                \n            \n\n\n\n\n            \n                \n                    Error event which fires when ever an error pops up in the component.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formChangeDetection\n                        \n                    \n                \n            \n            \n                \nformChangeDetection()\n                \n            \n\n\n\n\n            \n                \n                    Detects the formcontrol changes of all the formcontrols registered with the formGroup\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getComponent\n                        \n                    \n                \n            \n            \n                \ngetComponent(metadata: Metadata)\n                \n            \n\n\n\n\n            \n                \n                    Returns the component instance to the Dynamic Renderer\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    metadata\n                                    \n                                                Metadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nContains the information what component to render\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \nComponent Instance\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInputs\n                        \n                    \n                \n            \n            \n                \ngetInputs(leaf: any)\n                \n            \n\n\n\n\n            \n                \n                    Passes the inputs that needs to be passed as inputs to the Dynamic Renderer\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    leaf\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nMetadata which has inputs\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \nReturns the inputs that needs to be passed as inputs to the Dynamic Renderer\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initView\n                        \n                    \n                \n            \n            \n                \ninitView(viewPanels: Panel)\n                \n            \n\n\n\n\n            \n                \n                    Iterates through the view to create formControls\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    viewPanels\n                                    \n                                                Panel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe view Object\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        outputMethods\n                        \n                    \n                \n            \n            \n                \n                    \n                    outputMethods(change_event: ChangeEvent)\n                \n            \n\n\n\n\n            \n                \n                    Executes the functions passed as args\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    change_event\n                                    \n                                                ChangeEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseModel\n                        \n                    \n                \n            \n            \n                \nparseModel()\n                \n            \n\n\n\n\n            \n                \n                    This function updates the model on every formcontrol change\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepareFormControl\n                        \n                    \n                \n            \n            \n                \nprepareFormControl(model_path: string, section: Section, index: number)\n                \n            \n\n\n\n\n            \n                \n                    Prepares FormControls\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    model_path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe Modelpath of the Model\n\n\n                                    \n                                \n                                \n                                    section\n                                    \n                                                Section\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe section key in the model\n\n\n                                    \n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nIndex of the leaf in the section.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ajv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flexVal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formControlMapper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        modelForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.fb.group({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        outputs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    change_event: async (result: any) => {\n      await this.outputMethods(result);\n    },\n  }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        typeMapper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewPanels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ panel?.panel_name }}                                                                                                                                                                                                     '\n    var COMPONENTS = [{'name': 'NDynamicRendererComponent', 'selector': 'n-dynamic-renderer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NDynamicRendererComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NDynamicRendererModule.html":{"url":"modules/NDynamicRendererModule.html","title":"module - NDynamicRendererModule","body":"\n                   \n\n\n\n\n    Modules\n    NDynamicRendererModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NDynamicRendererModule\n\n\n\ncluster_NDynamicRendererModule_exports\n\n\n\ncluster_NDynamicRendererModule_declarations\n\n\n\n\nNDynamicRendererComponent\n\nNDynamicRendererComponent\n\n\n\nNDynamicRendererModule\n\nNDynamicRendererModule\n\nNDynamicRendererModule -->\n\nNDynamicRendererComponent->NDynamicRendererModule\n\n\n\n\n\nNDynamicRendererComponent \n\nNDynamicRendererComponent \n\nNDynamicRendererComponent  -->\n\nNDynamicRendererModule->NDynamicRendererComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/n-dynamic-renderer/src/lib/n-dynamic-renderer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NDynamicRendererComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NDynamicRendererComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config?: Config[])\n                \n            \n\n\n\n\n            \n                \n                    Creates and configures a module with all the required libraries and their components provided.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                Config[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nThe config which contains the libraryName and its imports.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        resetConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetConfig(config: Config[])\n                \n            \n\n\n\n\n            \n                \n                    Resets the config i.e., the imports modules.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                Config[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NDynamicRendererService.html":{"url":"injectables/NDynamicRendererService.html","title":"injectable - NDynamicRendererService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NDynamicRendererService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/n-dynamic-renderer/src/lib/n-dynamic-renderer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ajv\n                            \n                            \n                                componentCache\n                            \n                            \n                                modelSchema\n                            \n                            \n                                rendererConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                callFunction\n                            \n                            \n                                createUnflattenObject\n                            \n                            \n                                evaluateExpression\n                            \n                            \n                                getComponents\n                            \n                            \n                                getInputType\n                            \n                            \n                                getNewComponent\n                            \n                            \n                                getPathForSchema\n                            \n                            \n                                getValidatorsFromSchema\n                            \n                            \n                                load_deep\n                            \n                            \n                                mergeDeep\n                            \n                            \n                                prepareValidators\n                            \n                            \n                                readModel\n                            \n                            \n                                readValue\n                            \n                            \n                                trimModelValue\n                            \n                            \n                                updateObject\n                            \n                            \n                                validateObjectWithSchema\n                            \n                            \n                                validateResult\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    config\n                                \n                                \n                                    resetConfig\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_config: any)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _config\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        callFunction\n                        \n                    \n                \n            \n            \n                \n                    \n                    callFunction(viewFunctions: any, model: object, view: any, schema: any, modelChange: any, errors: any)\n                \n            \n\n\n\n\n            \n                \n                    Calls the global functions that got loaded on the intitialization of the application.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    viewFunctions\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe functions from the view which needs to be called.\n\n\n                                    \n                                \n                                \n                                    model\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe model.\n\n\n                                    \n                                \n                                \n                                    view\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        -The view.\n\n                                    \n                                \n                                \n                                    schema\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe Schema\n\n\n                                    \n                                \n                                \n                                    modelChange\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe callback which sends the updated model\n\n\n                                    \n                                \n                                \n                                    errors\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe callback which sends errors if there are any.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUnflattenObject\n                        \n                    \n                \n            \n            \n                \ncreateUnflattenObject(data: any)\n                \n            \n\n\n\n\n            \n                \n                    Creates an unflatten Object with the given key value pair\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe object with key value pair\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        -Unflattened Object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        evaluateExpression\n                        \n                    \n                \n            \n            \n                \nevaluateExpression(expr: any, model: any)\n                \n            \n\n\n\n\n            \n                \n                    Evaluates the expression provided.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    expr\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nExpression that needs to be evaluated.\n\n\n                                    \n                                \n                                \n                                    model\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \nEvaluated result.\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getComponents\n                        \n                    \n                \n            \n            \n                \ngetComponents(metadata: Metadata)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metadata\n                                    \n                                                Metadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInputType\n                        \n                    \n                \n            \n            \n                \ngetInputType(type: string)\n                \n            \n\n\n\n\n            \n                \n                    Returns the type that can be passed to \n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe type from the schema\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \nReturns the type that can be passed to \n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNewComponent\n                        \n                    \n                \n            \n            \n                \ngetNewComponent(metadata: Metadata)\n                \n            \n\n\n\n\n            \n                \n                    This function decides which component to render.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    metadata\n                                    \n                                                Metadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nMetadata which contains the component information.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Component Instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPathForSchema\n                        \n                    \n                \n            \n            \n                \ngetPathForSchema(model_path: any)\n                \n            \n\n\n\n\n            \n                \n                    Prepares path to traverse through the schema from model_path .\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    model_path\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nFor which to create a path.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \nPath to get the validators from.\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidatorsFromSchema\n                        \n                    \n                \n            \n            \n                \ngetValidatorsFromSchema(schema: any, model_path: string)\n                \n            \n\n\n\n\n            \n                \n                    Gets Validators of an individual property from the schema.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    schema\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe model schema.\n\n\n                                    \n                                \n                                \n                                    model_path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe model_path for which to get the validators from the schema.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \nThe validators from the schema.\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load_deep\n                        \n                    \n                \n            \n            \n                \nload_deep(a: any, b: any)\n                \n            \n\n\n\n\n            \n                \n                    This function helps to deepclone arrays.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mergeDeep\n                        \n                    \n                \n            \n            \n                \nmergeDeep(model: any, form: any)\n                \n            \n\n\n\n\n            \n                \n                    This deepClones the objects.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe object with which you want to deep merge.\n\n\n                                    \n                                \n                                \n                                    form\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe object which you want to deep merge.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \nThe deepmerged object.\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prepareValidators\n                        \n                    \n                \n            \n            \n                \nprepareValidators(validators: object)\n                \n            \n\n\n\n\n            \n                \n                    Prepares Validators to the formcontrol\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    validators\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAn object of validators from the schema\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \nAn array of Formcontrol Validators\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readModel\n                        \n                    \n                \n            \n            \n                \nreadModel(model_path: string, model: object)\n                \n            \n\n\n\n\n            \n                \n                    Reads the model  and returns the value\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    model_path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmodel_path\n\n\n                                    \n                                \n                                \n                                    model\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \nValue of the model_path from the model object.\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readValue\n                        \n                    \n                \n            \n            \n                \nreadValue(model_path: string, model: object)\n                \n            \n\n\n\n\n            \n                \n                    Gets the value of the path from the model\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    model_path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe model path\n\n\n                                    \n                                \n                                \n                                    model\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe object from which to get the value from.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \nThe value from the model object.\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trimModelValue\n                        \n                    \n                \n            \n            \n                \ntrimModelValue(str: string)\n                \n            \n\n\n\n\n            \n                \n                    The modelPath has an '@' decorator which needs to removed to compute it's value\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe model path with\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \nThe actual model_path\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateObject\n                        \n                    \n                \n            \n            \n                \nupdateObject(formgroupVal: any, model: any, schema: any, modelChange: any, errors: any)\n                \n            \n\n\n\n\n            \n                \n                    Updates the Model\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    formgroupVal\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe formGroup value which contains the changes\n\n\n                                    \n                                \n                                \n                                    model\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe model\n\n\n                                    \n                                \n                                \n                                    schema\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe schema\n\n\n                                    \n                                \n                                \n                                    modelChange\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe callback which sends the updated model\n\n\n                                    \n                                \n                                \n                                    errors\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe callback which sends errors if there are any.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateObjectWithSchema\n                        \n                    \n                \n            \n            \n                \nvalidateObjectWithSchema(obj: any, schema: any)\n                \n            \n\n\n\n\n            \n                \n                    Validates the object with the schema.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe object to be validated.\n\n\n                                    \n                                \n                                \n                                    schema\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nSchema.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \nReturns a boolean based on the validation.\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateResult\n                        \n                    \n                \n            \n            \n                \nvalidateResult(result: any, model: any, schema: any, modelChange: any, errors: any)\n                \n            \n\n\n\n\n            \n                \n                    Validate the return result from the global functions and updates the Model\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe return value from the global functions.\n\n\n                                    \n                                \n                                \n                                    model\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe model.\n\n\n                                    \n                                \n                                \n                                    schema\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe schema.\n\n\n                                    \n                                \n                                \n                                    modelChange\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe callback which sends the updated model\n\n\n                                    \n                                \n                                \n                                    errors\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe callback which sends errors if there are any.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ajv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        componentCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modelSchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rendererConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Config[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n                \n                    \n                        getconfig()\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        resetConfig\n                    \n                \n\n\n                \n                    \n                        setresetConfig(config: Config[])\n                    \n                \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            config\n                                                    \n                                                            \n                                                                            Config[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Options.html":{"url":"interfaces/Options.html","title":"interface - Options","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Options\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/n-dynamic-renderer/src/lib/interfaces/interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Options are the inputs to the component.\nmodel_path - The model path with @ .Eg: @case.personaldetails.name\noutput_events - It is an object of OutputEvents\nformController - This is generated by the library and is passed to the component.\ntype - Type is pulled from schema and is used to define the type on formcontroller and to parse the value\nIt takes someOther inputs based on the user configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            formController\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            model_path\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            output_events\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        formController\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formController:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model_path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        model_path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output_events\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        output_events:         OutputEvents\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OutputEvents\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OutputEvents.html":{"url":"interfaces/OutputEvents.html","title":"interface - OutputEvents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OutputEvents\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/n-dynamic-renderer/src/lib/interfaces/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            change_event\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change_event\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change_event:         ChangeEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ChangeEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Panels.html":{"url":"interfaces/Panels.html","title":"interface - Panels","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Panels\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/n-dynamic-renderer/src/lib/interfaces/interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Each item in the Expansion Panel is containerised by a card and styles,layout can be set on the panel level.\npanel_name - Name of the Expansion Panel Header.\nexpanded - Expansional Panel to be expanded or not.\nstyles- A key value pair of the CSS Styles.\nclass - string | string[]\nlayout - Responsive flex properties for mobile,tablet,desktop and tv\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            class\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            expanded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            layout\n                                        \n                                \n                                \n                                        \n                                            panel_name\n                                        \n                                \n                                \n                                        \n                                            sections\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            styles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expanded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        layout:         KeyValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         KeyValue\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        panel_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        panel_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sections\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sections:     Sections[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Sections[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        styles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        styles:         KeyValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         KeyValue\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Section.html":{"url":"interfaces/Section.html","title":"interface - Section","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Section\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/n-dynamic-renderer/src/lib/interfaces/interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Each item in the Section is containerised by a card and styles,layout can be set on the Section level.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            class\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            layout\n                                        \n                                \n                                \n                                        \n                                            leafs\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            styles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        layout:         KeyValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         KeyValue\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        leafs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        leafs:         Leaf[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Leaf[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        styles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        styles:         KeyValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         KeyValue\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Sections.html":{"url":"interfaces/Sections.html","title":"interface - Sections","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Sections\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/n-dynamic-renderer/src/lib/interfaces/interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            section\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        section\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        section:         Section\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Section\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/n-dynamic-renderer/src/lib/interfaces/interface.ts\n            \n            interface\n            ChangeEvent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/n-dynamic-renderer/src/lib/interfaces/interface.ts\n            \n            interface\n            Config\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/n-dynamic-renderer/src/lib/interfaces/interface.ts\n            \n            interface\n            Flex\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/n-dynamic-renderer/src/lib/interfaces/interface.ts\n            \n            interface\n            Function\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/n-dynamic-renderer/src/lib/interfaces/interface.ts\n            \n            interface\n            KeyValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/n-dynamic-renderer/src/lib/interfaces/interface.ts\n            \n            interface\n            Layout\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/n-dynamic-renderer/src/lib/interfaces/interface.ts\n            \n            interface\n            Leaf\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/n-dynamic-renderer/src/lib/interfaces/interface.ts\n            \n            interface\n            Metadata\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/n-dynamic-renderer/src/lib/interfaces/interface.ts\n            \n            interface\n            Options\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/n-dynamic-renderer/src/lib/interfaces/interface.ts\n            \n            interface\n            OutputEvents\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/n-dynamic-renderer/src/lib/interfaces/interface.ts\n            \n            interface\n            Panels\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/n-dynamic-renderer/src/lib/interfaces/interface.ts\n            \n            interface\n            Section\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/n-dynamic-renderer/src/lib/interfaces/interface.ts\n            \n            interface\n            Sections\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/n-dynamic-renderer/src/lib/n-dynamic-renderer.service.ts\n            \n            injectable\n            NDynamicRendererService\n            \n                69 %\n                (16/23)\n            \n        \n        \n            \n                \n                projects/n-dynamic-renderer/src/lib/n-dynamic-renderer/n-dynamic-renderer.component.ts\n            \n            component\n            NDynamicRendererComponent\n            \n                37 %\n                (9/24)\n            \n        \n        \n            \n                \n                projects/n-dynamic-renderer/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/n-dynamic-renderer/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 12.1.0-\n        \n            @angular/cdk : 12.2.13\n        \n            @angular/common : 12.1.0-\n        \n            @angular/compiler : 12.1.0-\n        \n            @angular/core : 12.1.0-\n        \n            @angular/flex-layout : 12.0.0-beta.34\n        \n            @angular/forms : 12.1.0-\n        \n            @angular/material : 12.2.13\n        \n            @angular/platform-browser : 12.1.0-\n        \n            @angular/platform-browser-dynamic : 12.1.0-\n        \n            @angular/router : 12.1.0-\n        \n            @compodoc/compodoc : 1.1.19\n        \n            n-components : file:n-components-0.0.1.tgz\n        \n            ng-dynamic-component : 8.0.0\n        \n            rxjs : 6.6.0\n        \n            tslib : 2.2.0\n        \n            zone.js : 0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNDynamicRenderer\nIt is a library for rendering components of the respective libraries with full life-cycle support for inputs and outputs dynamically.\nThis library accepts View and generates an UI as the following:\n\n\nLook at the 'View' how it is structured\nInstallation\n$ npm install n-dynamic-renderer\nUsage\nDownload the Case Manager UI Renderer from the story\n\n\nOpen 'Manage Plugins'->Add Dependency->Enter Package Name,Version,Angular Package, Library name, Module Name and checkon the forRoot() and click on the + button to add the module.\n\n\nCreate a legacy service \n\nPass the libraryname and its components installed in the applications by preparing the following structure:\n[\n  {\n    library: \"Custom Library\",\n    imports: {\n      className: InputClassComponent,\n    },\n  },\n];In the above configuration,'library' should be the library name .'Imports' is an object of key-value pair where key is the componentName it's value should be the actual component.\nYou can prepare as many of an array of objects of library and imports as the following\n[\n  {\n    library: \"Neutrinos Library1\",\n    imports: {\n      \"InputClassComponent1\": InputClassComponent1,\n    },\n  },\n   {\n    library: \"Neutrinos Library2\",\n    imports: {\n      \"InputClassComponent1\": InputClassComponent1,\n      \"CheckBoxComponent\": CheckBoxComponent,\n      \"HomePageComponent\": HomePageComponent\n    },\n  },\n];The above configuration can be passed to the library as the following:\n\nimport * as nComponents from 'n-components';\nimport * as inputComponent from '../../components/dynamic/input.component'\nimport * as input1Component from '../../components/dynamic/input1.component'\nimport {NDynamicRendererModule} from 'n-dynamic-renderer'\n\n@Injectable()\nexport class dynamicrendererService {\n    rendererImports;\n    nComponentModules\n    constructor(private NDynamicRendererModule: NDynamicRendererModule) {\n        this.nComponentModules={...inputComponent,...input1Component}\n    }\n    \n    resetRendererComponents() {\n        let config = [\n            {\n                library: 'n-components',\n                imports: { ...nComponents },\n            },\n            {\n                library: 'appComponents',\n                imports: {...this.nComponentModules},\n            }\n        ];\n        this.NDynamicRendererModule.resetConfig(config);\n        console.log(config)\n    }\n}\nAdd the above code in the legacy service created\n\nNow call the 'resetRendererComponents' method that we have created in the dynamicRendererService.\nTo do that first we need to inject the service in the component.\n\n\n\nOptions\n\n[(model)]\n[view]\n[schema]\n(onError)\n\n[model]\n\n\n\nProperty\nType\nRequired\n\n\n\n\n[(model)]\nobject\nRequired\n\n\n\nAccepts an object which should follow the Schema.Supports two way data binding as well.\n[model] = \"model\";\n[view]\n\n\n\nProperty\nType\nRequired\n\n\n\n\n[view]\nArray\nRequired\n\n\n\nView defines how the UI should render.\nDefine view in your component's class\nView = [\n  {\n    panel_name: \"Coverage Details\",\n    styles: {\n      \"show-border\": false,\n    },\n    class:\"panel_color\",\n    expanded: true,\n    sections: [\n      {\n        section: {\n          layout: {\n              mobile: {\n                flex: '100',\n              },\n              tablet: {\n                flex: '100',\n              },\n              desktop: {\n                flex: '100',\n              },\n              tv: {\n                flex: '100',\n              },\n            },\n            styles:{\n              color:'red'\n            }\n          leafs: [\n            {\n              styles: {},\n              layout: {\n                  mobile: {\n                    flex: '100',\n                  },\n                  tablet: {\n                    flex: '100',\n                  },\n                  desktop: {\n                    flex: '100',\n                  },\n                  tv: {\n                    flex: '100',\n                  },\n              },\n              id: \"uuid1\",\n              metadata: {\n                version: \"14.2.0\",\n                library: \"manulife\",\n                component_name: \"NMatButtonComponent\",\n                options: {\n                  label: \"Save\",\n                  output_events: {\n                    change_event: {\n                      functions: [\n                        {\n                          functionName: \"getMessage1\",\n                          arguments: [1, 2, 3],\n                        },\n                        {\n                          functionName: \"getMessage2\",\n                          arguments: [1, 2],\n                        },\n                        {\n                          functionName: \"getMessage3\",\n                        },\n                      ],\n                    },\n                  },\n                },\n                expression: {\n                  $eq: [\n                    \"@case.caseDetails.primaryLife.PersonalDetails.sex\",\n                    \"Female\",\n                  ],\n                },\n                updateOn: \"\",\n              },\n            },\n          ],\n        },\n      },\n    ],\n  },\n];\nThen add in component's template\n[view] = \"View\";Every level in the View has 'styles','layout' and 'class' in common where we defines CSS Styles as key value pairs in styles object , add responsive flex properties for mobile,tablet,desktop and tv in layout object ,define classes that are present in the library\n\nLayout desides the width of the View components on the UI for respective screen resolutions.Set Layout properties accordingly.\n\n\n[schema]\n\n\n\nProperty\nType\nRequired\n\n\n\n\n[schema]\nobject\nRequired\n\n\n\nThe schema for the Model.\n[schema] = \"schema\";onError()\nError handling callback.\n\n\n\nProperty\nType\nRequired\n\n\n\n\n(onError)\ncallback\nOptional\n\n\n\nDefine callback in your component's class\nonError(error: any) {\n  // do anything\n}Then add in component's template\nonError = \"onError($event)\";Example\n\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: `\n    \n  `,\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent {\n  schema = {\n    $id: \"https://example.com/object1666938433.json\",\n    title: \"Generated schema for Root\",\n    type: \"object\",\n    properties: {\n      case: {\n        type: \"object\",\n        properties: {},\n      },\n    },\n  };\n  model = {\n    case: {},\n  };\n\n  view =[\n  {\n    panel_name: \"Coverage Details\",\n    styles: {\n      \"show-border\": false,\n    },\n    class:\"panel_color\",\n    expanded: true,\n    sections: [\n      {\n        section: {\n          layout: {\n              mobile: {\n                flex: '100',\n              },\n              tablet: {\n                flex: '100',\n              },\n              desktop: {\n                flex: '100',\n              },\n              tv: {\n                flex: '100',\n              },\n            },\n            styles:{\n              color:'red'\n            }\n          leafs: [\n            {\n              styles: {},\n              layout: {\n                  mobile: {\n                    flex: '100',\n                  },\n                  tablet: {\n                    flex: '100',\n                  },\n                  desktop: {\n                    flex: '100',\n                  },\n                  tv: {\n                    flex: '100',\n                  },\n              },\n              id: \"uuid1\",\n              metadata: {\n                version: \"14.2.0\",\n                library: \"manulife\",\n                component_name: \"NMatButtonComponent\",\n                options: {\n                  label: \"Save\",\n                  output_events: {\n                    change_event: {\n                      functions: [\n                        {\n                          functionName: \"getMessage1\",\n                          arguments: [1, 2, 3],\n                        },\n                        {\n                          functionName: \"getMessage2\",\n                          arguments: [1, 2],\n                        },\n                        {\n                          functionName: \"getMessage3\",\n                        },\n                      ],\n                    },\n                  },\n                },\n                expression: {\n                  $eq: [\n                    \"@case.caseDetails.primaryLife.PersonalDetails.sex\",\n                    \"Female\",\n                  ],\n                },\n                updateOn: \"\",\n              },\n            },\n          ],\n        },\n      },\n    ],\n  },\n];\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NDynamicRendererModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NDynamicRendererModule\n\n\n\ncluster_NDynamicRendererModule_declarations\n\n\n\ncluster_NDynamicRendererModule_exports\n\n\n\n\nNDynamicRendererComponent\n\nNDynamicRendererComponent\n\n\n\nNDynamicRendererModule\n\nNDynamicRendererModule\n\nNDynamicRendererModule -->\n\nNDynamicRendererComponent->NDynamicRendererModule\n\n\n\n\n\nNDynamicRendererComponent \n\nNDynamicRendererComponent \n\nNDynamicRendererComponent  -->\n\nNDynamicRendererModule->NDynamicRendererComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.4\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Panel   (projects/.../interface.ts)\n                        \n                        \n                            updateOn   (projects/.../interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/n-dynamic-renderer/src/lib/interfaces/interface.ts\n    \n    \n        \n            \n                \n                    \n                    Panel\n                \n            \n            \n                \n                            Panels[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    updateOn\n                \n            \n            \n                \n                        \"change\" | \"blur\" | \"submit\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/n-dynamic-renderer/src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
